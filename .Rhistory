)
plot(corred.df[,3],corred.df[,4])
library(phyloseq)
library(ggplot2)
library(stringr)
library(foreign)
library(matrixStats)
#
# #spss2date <- function(x) as.Date(x/86400, origin = "1582-10-14")
# #spss2date(13510000000)
#
# source("/Users/mdavi/Documents/R_functions/calculate_adonis.R")
#
# #### data and ps object generation ####
#
# counts.small <- read.csv("CompiledCountsALL.small.csv",sep=";", row.names = 1)
# counts.med <- read.csv("CompiledCountsALL.medium.csv",sep=";", row.names = 1)
#
# elems <- unlist( strsplit( rownames(counts.small) , ":" ) )
# m.small <- matrix( elems , ncol = 3 , byrow = TRUE )
# rownames(m.small) <- rownames(counts.small)
#
# elems <- unlist( strsplit( grep("putative", rownames(counts.med), value = T) , ":" ) )
# m.medium <- matrix( elems , ncol = 3 , byrow = TRUE )
# rownames(m.medium) <- grep("putative", rownames(counts.med), value = T)
#
# elems <- unlist( strsplit( grep("putative", rownames(counts.med), value = T, invert = T) , ":" ) )
# m2 <- matrix( elems , ncol = 4 , byrow = TRUE )
# rownames(m2) <- grep("putative", rownames(counts.med), value = T, invert = T)
# m.medium <- rbind(m2[,1:3],m.medium)
#
# #meta <- read.csv("Overzicht samples opgestuurd voor MiR.csv", sep="\t", row.names = 1)
# meta <- read.csv("Overzicht samples opgestuurd voor MiR.csv", sep="\t")
# meta$IdentificationNumber <- as.numeric(gsub("FATLOSE0","",as.character(meta$Subject)))
#
#
# rownames(meta) <- paste0("S",str_pad(string = meta$Sample.ID, width = 2, pad = 0))
# samdata <- data.frame(Timepoint=as.factor(meta[colnames(counts.small),]$Timepoint), Type=as.factor(meta[colnames(counts.small),]$Type), Subject=meta[colnames(counts.small),]$Subject,row.names = colnames(counts.small), total_counts=colSums(counts.small), total_counts_log=log(colSums(counts.small)), sample=colnames(counts.small))
# spssdata <- read.spss("fatlose2_miRNA.sav")
# meta2 <- matrix(nrow = 23, unlist(spssdata))
# rownames(meta2) <- paste0("FATLOSE0",str_pad(string = meta2[,1], width = 2, pad = 0))
#
# meta22 <- meta2[match(meta$IdentificationNumber, spssdata$IdentificationNumber),]
# rownames(meta22) <- rownames(meta)
# colnames(meta22) <- names(spssdata)
#
# samdata <- cbind (samdata, meta22)
#
# ps.small <- phyloseq(tax_table(m.small),otu_table(counts.small, taxa_are_rows = T), sample_data(samdata))
# ps.medium <- phyloseq(tax_table(m.medium),otu_table(counts.med, taxa_are_rows = T), sample_data(samdata))
#
# #ps <- ps.small # dont use the small counts
#
# saveRDS(ps.small, file="ps.small.RDS")
# saveRDS(ps.medium, file="ps.medium.RDS")
ps <- readRDS("ps.medium.RDS")
ps@sam_data$Rd_C1_W0 <- as.numeric(as.character(ps@sam_data$Rd_C1_W0))
ps@sam_data$Rd_C2_W6 <- as.numeric(as.character(ps@sam_data$Rd_C2_W6))
ps@sam_data$Rd_C3_W18 <- as.numeric(as.character(ps@sam_data$Rd_C3_W18))
ps@sam_data$Responder
ps@sam_data$Date_0 <- as.numeric(as.character(ps@sam_data$Date_0))
levels(ps@sam_data$Donor) <- c(levels(ps@sam_data$Donor), "None")
ps@sam_data$Donor[is.na(ps@sam_data$Donor)] <- "None"
levels(ps@sam_data$Type)[levels(ps@sam_data$Type)==" allogene"] <- "allogene"
#### different ps subsets ####
ps.rare <- rarefy_even_depth(ps)
ps.patients <- prune_samples(ps@sam_data$Type!="donor",ps)
ps.patients.T1 <- prune_samples(ps.patients@sam_data$Timepoint==1,ps.patients)
ps.patients.T2 <- prune_samples(ps.patients@sam_data$Timepoint==2,ps.patients)
ps.T1 <- prune_samples(ps@sam_data$Timepoint!=2,ps)
ps.allogenic <- prune_samples(ps@sam_data$Type=="allogene",ps)
#### analysis ####
calculate_adonis_bray(ps.rare)
calculate_adonis_bray(ps.patients)
barplot(sample_sums(ps),las=2)
barplot(sample_sums(ps.rare),las=2)
#plot_heatmap(ps.rare)
p <- plot_ordination(physeq = ps.rare, ordination = ordinate(physeq = ps.rare, method = "PCoA", distance = "bray"), type = "biplot", label = "sample", color = "Date_0")
p = p + scale_color_gradient(low="red", high="green")
p
p <- plot_ordination(physeq = ps.rare, ordination = ordinate(physeq = ps.rare, method = "PCoA", distance = "bray"), type = "biplot", label = "sample", color = "total_counts_log")
p = p + scale_color_gradient(low="red", high="green")
p
p <- plot_ordination(physeq = ps.rare, ordination = ordinate(physeq = ps.rare, method = "PCoA", distance = "bray"), label = "Subject", color = "Type", shape = "Timepoint")
p + geom_line(aes(group=Subject)) + geom_text(aes(label=Subject),size=4) + geom_point(size=5)
ps.rare@sam_data$Date_0 <- spss2date(ps.rare@sam_data$Date_0)
ps.patients@sam_data$Date_0 <- spss2date(ps.patients@sam_data$Date_0)
p <- plot_ordination(physeq = ps.patients, ordination = ordinate(physeq = ps.patients, method = "PCoA", distance = "bray"), label = "Subject", color = "Date_0", shape = "Timepoint")
p + geom_line(aes(group=Subject)) + geom_text(aes(label=Subject),size=4) + geom_point(size=5) + scale_color_gradient(low="red", high="green")
p <- plot_ordination(physeq = ps.patients, ordination = ordinate(physeq = ps.patients, method = "PCoA", distance = "bray"), label = "Subject", color = "Type", shape = "Timepoint")
p + geom_line(aes(group=Subject)) + geom_text(aes(label=Subject),size=4) + geom_point(size=5)
calculate_adonis_bray(ps.rare)
ps.subjects.T1.rare <- rarefy_even_depth(prune_samples(ps@sam_data$Timepoint==1,ps))
ps.subjects.T2.rare <- rarefy_even_depth(prune_samples(ps@sam_data$Timepoint==2,ps))
ps.subjects.T01.rare <- rarefy_even_depth(prune_samples(ps@sam_data$Timepoint!=2,ps))
ps.subjects.T02.rare <- rarefy_even_depth(prune_samples(ps@sam_data$Timepoint!=1,ps))
calculate_adonis_bray(ps.subjects.T1.rare)
calculate_adonis_bray(ps.subjects.T2.rare)
calculate_adonis_jaccard(ps.rare)
p <- plot_ordination(physeq = ps.subjects.T1.rare, ordination = ordinate(physeq = ps.subjects.T1.rare, method = "PCoA", distance = "bray"), label = "Subject", color = "Donor", shape = "Type")
p + geom_line(aes(group=Donor)) + geom_text(aes(label=Subject),size=4) + geom_point(size=5)
p <- plot_ordination(physeq = ps.subjects.T2.rare, ordination = ordinate(physeq = ps.subjects.T2.rare, method = "PCoA", distance = "bray"), label = "Subject", color = "Donor", shape = "Type")
p + geom_line(aes(group=Donor)) + geom_text(aes(label=Subject),size=4) + geom_point(size=5)
p <- plot_ordination(physeq = ps.subjects.T01.rare, ordination = ordinate(physeq = ps.subjects.T01.rare, method = "PCoA", distance = "bray"), label = "Subject", color = "Donor", shape = "Type")
p + geom_line(aes(group=Donor)) + geom_text(aes(label=Subject),size=4) + geom_point(size=5)
p <- plot_ordination(physeq = ps.subjects.T02.rare, ordination = ordinate(physeq = ps.subjects.T02.rare, method = "PCoA", distance = "bray"), label = "Subject", color = "Donor", shape = "Type")
p + geom_line(aes(group=Donor)) + geom_text(aes(label=Subject),size=4) + geom_point(size=5)
p <- plot_ordination(physeq = ps.subjects.T2.rare, ordination = ordinate(physeq = ps.subjects.T2.rare, method = "PCoA", distance = "bray"), label = "Subject", color = "Donor", shape = "Responder")
p
p <- plot_ordination(physeq = ps.subjects.T2.rare, ordination = ordinate(physeq = ps.subjects.T2.rare, method = "PCoA", distance = "bray"), type = "biplot", label = "Subject", color = "Donor", shape = "Type")
p
p <- plot_ordination(physeq = ps.subjects.T1.rare, ordination = ordinate(physeq = ps.subjects.T1.rare, method = "PCoA", distance = "bray"), label = "Subject", color = "Donor", shape = "Type")
p + geom_line(aes(group=Subject))
p <- plot_ordination(physeq = ps.subjects.T1.rare, ordination = ordinate(physeq = ps.subjects.T1.rare, method = "PCoA", distance = "bray"), type = "biplot", label = "Subject", color = "Donor", shape = "Type")
p
p <- plot_ordination(physeq = ps.subjects.T1.rare, ordination = ordinate(physeq = ps.subjects.T1.rare, method = "PCoA", distance = "bray"), label = "Subject", color = "Glucagon_C1_W0", shape = "Type")
p
ps.subjects.T2.rare.RNR <- prune_samples(ps.subjects.T2.rare@sam_data$Responder!=999, ps.subjects.T2.rare)
p <- plot_ordination(physeq = ps.subjects.T2.rare.RNR, ordination = ordinate(physeq = ps.subjects.T2.rare.RNR, method = "PCoA", distance = "bray"), label = "Subject", color = "Donor", shape = "Responder")
p
distmat <- melt(as.matrix(distance(ps.rare, method = "bray")))
meandist <- c()
for (sample in unique(distmat[,1])){
meandist[sample] <- mean(distmat[distmat[,1]==sample,3])
}
#### Deseq ####
library("DESeq2")
packageVersion("DESeq2")
diagdds = phyloseq_to_deseq2(ps.patients, ~ Donor)
diagdds = DESeq(diagdds, test="Wald", fitType="parametric")
res = results(diagdds, cooksCutoff = FALSE)
alpha = 0.1
sigtab = res[which(res$padj < alpha), ]
head(sigtab)
dim(sigtab)
diagdds = phyloseq_to_deseq2(ps.patients.T2, ~ Type)
diagdds = DESeq(diagdds, test="Wald", fitType="parametric")
res = results(diagdds, cooksCutoff = FALSE)
alpha = 0.1
sigtab = res[which(res$padj < alpha), ]
head(sigtab)
dim(sigtab)
diagdds = phyloseq_to_deseq2(ps.patients.T1, ~ Type)
diagdds = DESeq(diagdds, test="Wald", fitType="parametric")
res = results(diagdds, cooksCutoff = FALSE)
alpha = 0.1
sigtab = res[which(res$padj < alpha), ]
head(sigtab)
dim(sigtab)
diagdds = phyloseq_to_deseq2(rarefy_even_depth(ps.T1), ~ Type)
diagdds = DESeq(diagdds, test="Wald", fitType="parametric")
res = results(diagdds, cooksCutoff = FALSE)
alpha = 0.1
sigtab = res[which(res$padj < alpha), ]
head(sigtab)
dim(sigtab)
diagdds = phyloseq_to_deseq2(ps.allogenic, ~ Timepoint)
diagdds = DESeq(diagdds, test="Wald", fitType="parametric")
res = results(diagdds, cooksCutoff = FALSE)
alpha = 0.1
sigtab = res[which(res$padj < alpha), ]
head(sigtab)
dim(sigtab)
#### microbiome data ####
otu <- read.csv("mmc2-fecal.csv", header=T,sep=";")
otu <- otu[otu[,2]!=18,]
order.ps <- paste(ps@sam_data$IdentificationNumber, ps@sam_data$Timepoint,sep="_")
rownames(otu) <- paste(otu[,1],otu[,2],sep="_")
rownames(otu) <- gsub("_6","_2",gsub("_0","_1",rownames(otu) ))
ps.MRNA.overlap <- prune_samples(order.ps %in% rownames(otu), ps)
order.ps <- paste(ps.MRNA.overlap@sam_data$IdentificationNumber, ps.MRNA.overlap@sam_data$Timepoint,sep="_")
sample_names(ps.MRNA.overlap) <- order.ps
otu <- otu[order.ps,-c(1:2)]
corOTU <- cor(t(otu))
corMRNA <- cor(ps.MRNA.overlap@otu_table)
cor.test(as.vector(corOTU),as.vector(corMRNA))
library(reshape2)
corOTU.df <- setNames(melt(corOTU), c('rows', 'vars', 'values'))
corMRNA.df <- setNames(melt(corMRNA), c('rows', 'vars', 'values'))
ps.MRNA.overlap@sam_data[corMRNA.df[,2],]$IdentificationNumber
corOTU.df <- corOTU.df[gsub("_*","",corOTU.df[,1]) != gsub("_*","",corOTU.df[,2]),]
corMRNA.df <- corMRNA.df[gsub("_*","",corMRNA.df[,1]) != gsub("_*","",corMRNA.df[,2]),]
cor.test(corOTU.df[,3],corMRNA.df[,3])
plot(corOTU.df[,3],corMRNA.df[,3])
#### otu mRNA correlation ####
cormat <- sapply(otu,function(x){cor(x, t(ps.MRNA.overlap@otu_table),method = "spearman")})
cormat[is.na(cormat)] <- 0
rownames(cormat) <- rownames(ps.MRNA.overlap@otu_table)
cormatred <- cormat[,colSums(cormat>0.5)>0]
cormatred <- cormatred[rowSums(cormat>0.5)>0,]
dim(cormatred)
heatmap.2(t(cormatred), trace="none", margins = c(10,15))
library(reshape2)
corred.df <- melt(cormatred)
corred.df <- corred.df[corred.df[,3]>0.6,]
corred.df$pval <- 1
corred.df$sumotu <- 0
corred.df$summrna <- 0
for(i in 1:dim(corred.df)[1]){
bla <- cor.test(as.vector(ps.MRNA.overlap@otu_table[as.character(corred.df[i,1]),]),otu[,as.character(corred.df[i,2])],method = "spearman")
corred.df$pval[i] <- bla$p.value
corred.df$summrna[i] <- sum(ps.MRNA.overlap@otu_table[corred.df[i,1],])
corred.df$sumotu[i] <- sum(otu[,as.character(corred.df[i,2])])
}
plot(corred.df[,3],corred.df[,4])
plot(as.vector(ps.MRNA.overlap@otu_table["putativemature:MI0006422:3p",]),
otu[,"uncultured.bacterium.HuCB7"])
plot(as.vector(ps.MRNA.overlap@otu_table["putativemature:MI0006422:3p",]),
otu[,"uncultured.bacterium.HuCB7"], log="xy")
corred.df
heatmap.2(t(cormatred), trace="none", margins = c(10,15))
library(gplots)
corred.df
heatmap.2(t(cormatred), trace="none", margins = c(10,15))
cor.test(as.vector(corOTU),as.vector(corMRNA))
cor.test(as.vector(corOTU),as.vector(corMRNA), method = "s")
cor.test(as.vector(corOTU),as.vector(corMRNA), method = "spearman")
cor.test(as.vector(corOTU),as.vector(corMRNA), method = "kendall")
cor.test(as.vector(corOTU),as.vector(corMRNA), method = "pearson")
p <- plot_ordination(physeq = ps.rare, ordination = ordinate(physeq = ps.rare, method = "PCoA", distance = "bray"), label = "Subject", color = "Type", shape = "Timepoint")
p + geom_line(aes(group=Subject)) + geom_text(aes(label=Subject),size=4) + geom_point(size=5)
?draw.triple.venn
venn.plot <- draw.triple.venn(
area1 = length(unique(a)),
area2 = length(unique(b)),
area3 = length(unique(c)),
n12 = sum(table(c(a,b))==2),
n23 = sum(table(c(b,c))==2),
n13 = sum(table(c(a,c))==2),
n123 = sum(table(c(a,b,c))==3),
category = c("CHU, Lui et al", "Fatloose", "database"),
fill = c("blue", "red", "green"),
lty = "blank",
cex = 2,
cat.cex = 2,
cat.col = c("blue", "red", "green")
)
venn.plot <- draw.triple.venn(
area1 = length(unique(a)),
area2 = length(unique(b)),
area3 = length(unique(c)),
n12 = sum(table(c(a,b))==2),
n23 = sum(table(c(b,c))==2),
n13 = sum(table(c(a,c))==2),
n123 = sum(table(c(a,b,c))==3),
category = c("CHU, Lui et al", "Fatloose", "database"),
fill = c("blue", "red", "green"),
lty = "blank",
cex = 2,
cat.cex = 2,
cat.col = c("blue", "red", "green")
)
dev.off()
venn.plot <- draw.triple.venn(
area1 = length(unique(a)),
area2 = length(unique(b)),
area3 = length(unique(c)),
n12 = sum(table(c(a,b))==2),
n23 = sum(table(c(b,c))==2),
n13 = sum(table(c(a,c))==2),
n123 = sum(table(c(a,b,c))==3),
category = c("CHU, Lui et al", "Fatloose", "database"),
fill = c("blue", "red", "green"),
lty = "blank",
cex = 2,
cat.cex = 2,
cat.col = c("blue", "red", "green")
)
venn.plot <- draw.triple.venn(
area1 = length(unique(a)),
area2 = length(unique(b)),
area3 = length(unique(c)),
n12 = sum(table(c(a,b))==2),
n23 = sum(table(c(b,c))==2),
n13 = sum(table(c(a,c))==2),
n123 = sum(table(c(a,b,c))==3),
category = c("CHU, Lui et al", "Fatlose", "database"),
fill = c("blue", "red", "green"),
lty = "blank",
cex = 2,
cat.cex = 2,
cat.col = c("blue", "red", "green")
)
venn.plot <- draw.triple.venn(
area1 = length(unique(a)),
area2 = length(unique(b)),
area3 = length(unique(c)),
n12 = sum(table(c(a,b))==2),
n23 = sum(table(c(b,c))==2),
n13 = sum(table(c(a,c))==2),
n123 = sum(table(c(a,b,c))==3),
category = c("CHU, Lui et al", "Fatlose", "database"),
fill = c("blue", "red", "green"),
lty = "blank",
cex = 2,
cat.cex = 2,
cat.col = c("blue", "red", "green")
)
p <- plot_ordination(physeq = ps.rare, ordination = ordinate(physeq = ps.rare, method = "PCoA", distance = "bray"), label = "Subject", color = "Type", shape = "Timepoint")
p + geom_line(aes(group=Subject)) + geom_text(aes(label=Subject),size=4) + geom_point(size=5)
ord <- ordinate(physeq = ps, formula = ~pH + Sample.Type, method = "RDA", distance = "bray")
library(phyloseq)
library(ggplot2)
library(stringr)
library(foreign)
library(matrixStats)
#
# #spss2date <- function(x) as.Date(x/86400, origin = "1582-10-14")
#
ps <- readRDS("ps.medium.RDS")
ps@sam_data$Rd_C1_W0 <- as.numeric(as.character(ps@sam_data$Rd_C1_W0))
ps@sam_data$Rd_C2_W6 <- as.numeric(as.character(ps@sam_data$Rd_C2_W6))
ps@sam_data$Rd_C3_W18 <- as.numeric(as.character(ps@sam_data$Rd_C3_W18))
ps@sam_data$Responder
ps@sam_data$Date_0 <- as.numeric(as.character(ps@sam_data$Date_0))
levels(ps@sam_data$Donor) <- c(levels(ps@sam_data$Donor), "None")
ps@sam_data$Donor[is.na(ps@sam_data$Donor)] <- "None"
levels(ps@sam_data$Type)[levels(ps@sam_data$Type)==" allogene"] <- "allogene"
ps.rare <- rarefy_even_depth(ps)
ps.patients <- prune_samples(ps@sam_data$Type!="donor",ps)
ps.patients.T1 <- prune_samples(ps.patients@sam_data$Timepoint==1,ps.patients)
setwd("C:/Users/mdavi/Documents/Trouw/S16404_mothurmerged")
library(phyloseq)
library(ggplot2)
library(sas7bdat)
source("/Users/mdavi/Documents/R_functions/taxa_facet_barplot_asv.R")
source("/Users/mdavi/Documents/R_functions/calculate_adonis.R")
source("/Users/mdavi/Documents/R_functions/calculate_rarefactioncurves.R")
ps <- readRDS("ps.S16404.rds")
sample_names(ps) <- paste(ps@sam_data$animal.number,ps@sam_data$Sample.Type,ps@sam_data$Treat,sep="_")
set.seed(1)
ps.rare <- rarefy_even_depth(ps, rngseed = T)
ord <- ordinate(physeq = ps, formula = ~pH + Sample.Type, method = "RDA", distance = "bray")
plot_ordination(physeq = ps, ordination = ord, color = "AA", shape="Treat") + ggplot2::scale_color_gradient(low="red", high="green")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "AA", shape="Treat") + ggplot2::scale_color_gradient(low="red", high="green")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "AA", shape="Treat", type="biplot") + ggplot2::scale_color_gradient(low="red", high="green")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "AA", shape="Treat", type="biplot", label="Genus") + ggplot2::scale_color_gradient(low="red", high="green")
plot_ordination(physeq = ps, ordination = ord, axes = c(1,2), color = "AA", shape="Treat", type="biplot", label="Genus") + ggplot2::scale_color_gradient(low="red", high="green")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "AA", shape="Treat", type="biplot", label="Genus") + ggplot2::scale_color_gradient(low="red", high="green")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Sample.Type", shape="Treat") + ggplot2::scale_color_gradient(low="red", high="green")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Sample.Type", shape="Treat")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Sample.Type", shape="Treat") + geom_line(aes(group="animal.number"))
ps@sam_data$animal.number
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Sample.Type", shape="Treat") + geom_line(aes(group=animal.number))
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treatment", shape="Treat") + geom_line(aes(group=animal.number))
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treatment", shape="Sample.Type") + geom_line(aes(group=animal.number))
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type") + geom_line(aes(group=animal.number))
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", type="biplot", label="Genus") + geom_line(aes(group=animal.number))
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type") + geom_line(aes(group=animal.number))
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", label=animal.number) + geom_line(aes(group=animal.number))
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", label="animal.number") + geom_line(aes(group=animal.number))
ps@sam_data$piglet
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", label="piglet") + geom_line(aes(group=animal.number))
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", type="biplot", label="Genus")
plot_ordination(physeq = ps, ordination = ord, axes = c(1,2), color = "Treat", shape="Sample.Type", type="biplot", label="Genus")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", type="biplot", label="Genus")
plot_ordination(physeq = ps, ordination = ord, axes = c(1,2), color = "Treat", shape="Sample.Type", type="biplot", label="Genus")
ord <- ordinate(physeq = ps, formula = ~pH + Sample.Type, method = "RDA", distance = "bray")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", type="biplot", label="Genus")
ord <- ordinate(physeq = ps, formula = ~ pH + Sample.Type, method = "RDA", distance = "bray")
plot_ordination(physeq = ps, ordination = ord, axes = c(1,2), color = "AA", shape="Treat", type="biplot", label="Genus") + ggplot2::scale_color_gradient(low="red", high="green")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "AA", shape="Treat", type="biplot", label="Genus") + ggplot2::scale_color_gradient(low="red", high="green")
p <- plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "AA", shape="Treat", type="biplot", label="Genus") + ggplot2::scale_color_gradient(low="red", high="green")
p
p$data
ord
ord$call
ord$CCA
ord$CA
ord$CCA$wa
ord$CA$eig
ord$CA$u
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "AA", shape="Treat", type="biplot", label="Genus") + ggplot2::scale_color_gradient(low="red", high="green")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", type="biplot", label="Genus")
ordiellipse(ord, Management, col=1:4, kind = "ehull", lwd=3)
plot_ordination(physeq = ps, ordination = ord, axes = c(1,2), color = "AA", shape="Treat", type="biplot", label="Genus") + ggplot2::scale_color_gradient(low="red", high="green")
ps@sam_data
ps@sam_data$soq
ps@sam_data$sow
ps@sam_data$Sow
table(ps@sam_data$Sow)
table(ps@sam_data$Sow)/2
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", type="biplot", label="Genus")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", type="biplot", label="piglet")
ps@sam_data$animal.number
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "Treat", shape="Sample.Type", type="biplot", label="animal.number")
ps
ps@sam_data$Stomach.cont
setwd("C:/Users/mdavi/Documents/Trouw/S16404_mothurmerged")
library(phyloseq)
library(ggplot2)
library(sas7bdat)
source("/Users/mdavi/Documents/R_functions/taxa_facet_barplot_asv.R")
source("/Users/mdavi/Documents/R_functions/calculate_adonis.R")
source("/Users/mdavi/Documents/R_functions/calculate_rarefactioncurves.R")
ls()
adonis
ord <- ordinate(physeq = ps, formula = . ~ pH, method = "RDA", distance = "bray")
plot_ordination(physeq = ps, ordination = ord, axes = c(3,4), color = "AA", shape="Treat") + ggplot2::scale_color_gradient(low="red", high="green")
ps
setwd("C:/Users/mdavi/Documents/AMC/MicrobiotaCentre/Projects/GRIEG/")
library(phyloseq)
library(stringr)
library(ggplot2)
library(reshape2)
library(grid)
library(plyr)
source("/Users/mdavi/Documents/R_functions/taxa_facet_barplot_asv.R")
source("/Users/mdavi/Documents/R_functions/calculate_adonis.R")
source("/Users/mdavi/Documents/R_functions/calculate_rarefactioncurves.R")
setwd("C:/Users/mdavi/Documents/Trouw/S16404_mothurmerged")
library(phyloseq)
library(ggplot2)
library(sas7bdat)
source("/Users/mdavi/Documents/R_functions/taxa_facet_barplot_asv.R")
source("/Users/mdavi/Documents/R_functions/calculate_adonis.R")
source("/Users/mdavi/Documents/R_functions/calculate_rarefactioncurves.R")
ps <- readRDS("ps.S16404.rds")
sample_names(ps) <- paste(ps@sam_data$animal.number,ps@sam_data$Sample.Type,ps@sam_data$Treat,sep="_")
set.seed(1)
ps.rare <- rarefy_even_depth(ps, rngseed = T)
taxa_sums(ps.ce)
ps.ce <- prune_samples(ps@sam_data$Sample.Type=="Ceacum", ps)
taxa_sums(ps.ce)
taxa_sums(ps.ce)>100
cormat <- sapply(ps.ce@sam_data[,unlist(lapply(ps@sam_data, FUN=is.numeric))],function(x){cor(x, t(ps.ce@otu_table[,taxa_sums(ps.ce)>100]),method = "spearman")})
cormat <- sapply(ps.ce@sam_data[,unlist(lapply(ps@sam_data, FUN=is.numeric))],function(x){cor(x, t(ps.ce@otu_table[taxa_sums(ps.ce)>100,]),method = "spearman")})
cormat[is.na(cormat)] <- 0
heatmap.2(t(cormatred), trace="none", margins = c(10,15), col=redgreen(30))
library(gplots)
heatmap.2(t(cormatred), trace="none", margins = c(10,15), col=redgreen(30))
dim(cormatred)
ps.ce
cormat <- sapply(ps.ce@sam_data[,unlist(lapply(ps.ce@sam_data, FUN=is.numeric))],function(x){cor(x, t(ps.ce@otu_table[taxa_sums(ps.ce)>100,]),method = "spearman")})
cormat[is.na(cormat)] <- 0
cormat <- NULL
cormat <- sapply(ps.ce@sam_data[,unlist(lapply(ps.ce@sam_data, FUN=is.numeric))],function(x){cor(x, t(ps.ce@otu_table[taxa_sums(ps.ce)>100,]),method = "spearman")})
dim(cormat)
dim(cormat[is.na(cormat)] <- 0
heatmap.2(t(cormatred), trace="none", margins = c(10,15), col=redgreen(30))
cormat[is.na(cormat)] <- 0
heatmap.2(t(cormatred), trace="none", margins = c(10,15), col=redgreen(30))
heatmap.2(t(cormat), trace="none", margins = c(10,15), col=redgreen(30))
colSums(cormat>0.5)>0
colSums(cormat<-0.5)>0
colSums(cormat<(-0.5))>0
colSums(cormat<(0.5*-1))>0
cormat
cormat <- sapply(ps.ce@sam_data[,unlist(lapply(ps.ce@sam_data, FUN=is.numeric))],function(x){cor(x, t(ps.ce@otu_table[taxa_sums(ps.ce)>100,]),method = "spearman")})
colSums(cormat<(0.5*-1))>0
colSums(cormat<(0.5*-1))>0 & colSums(cormat>0.5)>0
colSums(cormat<(0.5*-1))>0 & colSums(cormat>0.5)>0
cormatred <- cormat[,rowSums(cormat<(0.5*-1))>0 & rowSums(cormat>0.5)>0,]
rowSums(cormat<(0.5*-1))>0 & rowSums(cormat>0.5)>0
rowSums(cormat<(0.5*-1))>0
rowSums(cormat<(0.5*-1))
(cormat<(0.5*-1)
)
cormat <- sapply(ps.ce@sam_data[,unlist(lapply(ps.ce@sam_data, FUN=is.numeric))],function(x){cor(x, t(ps.ce@otu_table[taxa_sums(ps.ce)>100,]),method = "spearman")})
rowSums(cormat<(0.5*-1))>0 & rowSums(cormat>0.5)>0
rowSums(cormat<(0.5*-1))>0
rowSums(cormat<(0.5*-1))
colSums(cormat<(0.5*-1))
cormat[is.na(cormat)] <- 0
rowSums(cormat<(0.5*-1))>0 & rowSums(cormat>0.5)>0
cormatred <- cormat[,rowSums(cormat<(0.5*-1))>0 & rowSums(cormat>0.5)>0,]
cormatred <- cormat[rowSums(cormat<(0.5*-1))>0 & rowSums(cormat>0.5)>0,]
cormatred
cormatred <- cormat[,colSums(cormatred<(0.5*-1))>0 & colSums(cormatred>0.5)>0]
cormatred
dim(cormatred)
cormatred <- cormat[rowSums(cormat<(0.5*-1))>0 & rowSums(cormat>0.5)>0,]
cormatred <- cormatred[,colSums(cormatred<(0.5*-1))>0 & colSums(cormatred>0.5)>0]
dim(cormatred)
cormatred
ps.ce@tax_table[,6]
make.unique(ps.ce@tax_table[,6])
rownames(cormat) <- make.unique(ps.ce@tax_table[,6])
colnames(cormat) <- make.unique(ps.ce@tax_table[,6])
cormat <- sapply(ps.ce@sam_data[,unlist(lapply(ps.ce@sam_data, FUN=is.numeric))],function(x){cor(x, t(ps.ce@otu_table[taxa_sums(ps.ce)>100,]),method = "spearman")})
cormat[is.na(cormat)] <- 0
colnames(cormat) <- make.unique(ps.ce@tax_table[,6])[taxa_sums(ps.ce)>100]
rownames(cormat) <- make.unique(ps.ce@tax_table[,6])[taxa_sums(ps.ce)>100]
cormatred <- cormat[rowSums(cormat<(0.5*-1))>0 & rowSums(cormat>0.5)>0,]
cormatred <- cormatred[,colSums(cormatred<(0.5*-1))>0 & colSums(cormatred>0.5)>0]
cormatred
ps.ce <- prune_samples(ps@sam_data$Sample.Type!="Ceacum", ps)
library(gplots)
cormat <- sapply(ps.ce@sam_data[,unlist(lapply(ps.ce@sam_data, FUN=is.numeric))],function(x){cor(x, t(ps.ce@otu_table[taxa_sums(ps.ce)>100,]),method = "spearman")})
cormat[is.na(cormat)] <- 0
rownames(cormat) <- make.unique(ps.ce@tax_table[,6])[taxa_sums(ps.ce)>100]
heatmap.2(t(cormat), trace="none", margins = c(10,15), col=redgreen(30))
cormatred <- cormat[rowSums(cormat<(0.5*-1))>0 & rowSums(cormat>0.5)>0,]
cormatred <- cormatred[,colSums(cormatred<(0.5*-1))>0 & colSums(cormatred>0.5)>0]
cormatred
taxa_names(ps.ce) <- make.unique(ps.ce@tax_table[,6])
ps.ce@otu_table[,"[Eubacterium]_nodatum_group"]
ps.ce@otu_table[,"[Eubacterium]_nodatum_group",]
ps.ce@otu_table[,"Ruminococcaceae_UCG-008",]
ps.ce@otu_table[,"Ruminococcaceae_UCG-008"]
ps.ce@otu_table["Ruminococcaceae_UCG-008",]
ps.ce@otu_table["[Eubacterium]_nodatum_group",]
plot(ps.ce@otu_table["[Eubacterium]_nodatum_group",],ps.ce@sam_data$pHcol)
ps.ce@sam_data[,unlist(lapply(ps.ce@sam_data, FUN=is.numeric))]
heatmap.2(t(cormat), trace="none", margins = c(10,15), col=redgreen(30))
heatmap.2(t(cormatred), trace="none", margins = c(10,15), col=redgreen(30))
cormatred <- cormat[rowSums(cormat<(0.3*-1))>0 & rowSums(cormat>0.3)>0,]
ps@sam_data$Sow
table(ps@sam_data$Sow, ps@sam_data$Treat
)
table(ps@sam_data$Sow, ps@sam_data$Treat)
table(ps.ce@sam_data$Sow, ps.ce@sam_data$Treat)
